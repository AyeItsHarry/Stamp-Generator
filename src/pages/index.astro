---
import Layout from "../layouts/Layout.astro";
import Footer from "../components/Footer.astro";
---

<Layout title="WiiLink Mii Stamp Generator" />
<div class="flex items-center justify-center relative">
  <div
    id="drop-area"
    class="md:m-8 m-3 sm:w-[calc(100vw-100px)] w-[calc(100vw-10px)] sm:h-[calc(100vh-100px)] h-[calc(100vh-10px)] md:border-4 border-dashed border-white rounded-3xl flex flex-col gap-5 items-center justify-between text-white transition-all"
  >
    <div></div>
    <div class="flex flex-col items-center text-center max-w-[600px]">
      <img src="/img/miistampgenerator-logo.png" class="mb-10 w-72 invert" />
      <b class="text-3xl" id="drop-text">Drag and drop your Mii (.miigx) file</b>
      <p id="error-message" class="mt-3 opacity-60">
        This tool will download an stl file of a stamp with the Mii you
        uploaded, this process may take upwards of 2 minutes to complete.
      </p>
      <input type="file" id="fileElem" accept=".miigx" style="display: none;" />
    </div>
    <div class="w-[calc(100%-50px)] flex flex-col items-center">
      <div class="line-container opacity-60">
        <div class="line"></div>
        <p class="text">Advanced</p>
        <div class="line"></div>
      </div>
      <div class="mt-3 mb-6 flex flex-row gap-3 items-center justify-center">
        <button
          class="text-white font-bold hover:underline"
          onclick="localStorage.setItem('generate', 0); document.getElementById('fileElem').click();"
        >
          <i class="fa-solid fa-stamp"></i> Generate stamp
        </button>
        <button
          class="ml-3 mr-3 text-white font-bold hover:underline"
          onclick="localStorage.setItem('generate', 1); document.getElementById('fileElem').click();"
        >
          <i class="fa-solid fa-user"></i> Only face
        </button>
        <button
          class="mr-5 text-white font-bold hover:underline"
          onclick="localStorage.setItem('generate', 2); document.getElementById('fileElem').click();"
        >
          <i class="fa-solid fa-file-code"></i> SVG
        </button>
        |
        <a
          href="https://miicontest.wiilink.ca/search"
          class="ml-5 hover:underline"
          ><i class="fa-solid fa-search"></i> Search for Miis</a
        >
      </div>
    </div>
  </div>
  <div
    id="progress-container"
    class="m-8 w-[calc(100vw-100px)] h-[calc(100vh-100px)] md:border-4 border-dashed border-white rounded-3xl hidden flex-col gap-5 items-center justify-between text-white transition-all"
  >
  <div></div>
    <div class="flex flex-row gap-3 items-center">
      <img
        src="/img/loading.gif"
        class="h-10"
        style="filter:brightness(10000%);"
      />
      <p class="text">
        <b id="job-status">In queue...</b><br />
        <span class="opacity-60">It may take up to 2 minutes.</span>
      </p>
    </div>
    <p id="job-id" class="mb-6 opacity-60" title="Got an error? Open a support ticket with this jobID."></p>
  </div>
  <div
    id="err-multiple-instance"
    class="m-8 w-[calc(100vw-100px)] h-[calc(100vh-100px)] md:border-4 border-dashed border-white rounded-3xl hidden flex-col gap-3 items-center justify-center text-white transition-all"
  >
    <i class="mb-5 fa-solid fa-exclamation-triangle text-7xl"></i>
    <h1 class="text-4xl font-bold">Continue on the other tab!</h1>
    <p class="opacity-60">
      The site is already open in another tab. Please continue there.
    </p>
  </div>
</div>
<Footer />

<script>
  // Check if the site is already open in another tab
  if (localStorage.getItem("siteOpen") === "true") {
    document.getElementById("drop-area").remove();
    document.getElementById("err-multiple-instance").classList.remove("hidden");
    document.getElementById("err-multiple-instance").classList.add("flex");
  } else {
    // Set the flag in localStorage
    localStorage.setItem("siteOpen", "true");

    // Remove the flag when the user closes the tab or navigates away
    window.addEventListener("beforeunload", () => {
      localStorage.removeItem("siteOpen");
    });
  }

  function renderMii(file) {
    const mode = localStorage.getItem("generate") || 0;
    const reader = new FileReader();
    reader.onload = function (event) {
      const base64String = (event.target.result).split(",")[1];

      // Send the data to the server
      const formData = new FormData();
      formData.append("stamp", localStorage.getItem("generate")); // 0 for stamp, 1 for face, 2 for svg
      formData.append("filename", file.name);
      formData.append("platform", "wii");
      formData.append("data", base64String);

      // Show progress bar
      document.getElementById("progress-container").classList.remove("hidden");
      document.getElementById("progress-container").classList.add("flex");
      document.getElementById("drop-area").classList.add("hidden");

      // Add beforeunload event listener to prevent user from leaving the page
      window.addEventListener("beforeunload", beforeUnloadHandler);

      fetch(`http://localhost:3000/generate-stamp`, {
        method: "POST",
        body: formData,
      })
        .then((response) => {
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          return response.json();
        })
        .then((data) => {
          const jobId = data.jobId;
          document.getElementById("job-id").innerHTML = `<i class="fa-solid fa-fingerprint"></i> ${jobId}`;
          document.getElementById("job-status").innerHTML = `${data.status}`;
          checkJobStatus(jobId);
        })
        .catch((error) => {
          console.error("Error:", error);
          // Display error message
          const errorMessage = document.getElementById("error-message");
          errorMessage.classList.remove("opacity-60");
          errorMessage.innerHTML = `<div class="px-10 py-3 rounded-lg bg-red-600"><i class="fa-solid fa-triangle-exclamation"></i> ${error.message}</div>`;
          errorMessage.classList.remove("hidden");

          // Hide progress bar and show drop area
          document.getElementById("progress-container").classList.add("hidden");
          document.getElementById("drop-area").classList.remove("hidden");

          // Remove beforeunload event listener
          window.removeEventListener("beforeunload", beforeUnloadHandler);
        });
    };
    reader.readAsDataURL(file);
  }

  function checkJobStatus(jobId) {
    fetch(`http://localhost:3000/check-status/${jobId}`)
      .then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
      })
      .then((data) => {
        console.log(data);
        if (data.status === 'Completed') {
          const blob = new Blob([data.result.stl], { type: "application/sla" });
          const url = URL.createObjectURL(blob);
          const a = document.createElement("a");
          if (Number(localStorage.getItem("generate")) === 2) {
            a.setAttribute("download", data.result.name + " Stamp.svg");
          } else {
            a.setAttribute("download", data.result.name + " Stamp.stl");
          }
          a.setAttribute("href", url);
          a.click();

          // Hide progress bar and show drop area
          document.getElementById("progress-container").classList.add("hidden");
          document.getElementById("drop-area").classList.remove("hidden");
          document.getElementById("error-message").innerHTML = "This tool will download an stl file of a stamp with the Mii you uploaded, this process may take upwards of 2 minutes to complete.";

          // Remove beforeunload event listener
          window.removeEventListener("beforeunload", beforeUnloadHandler);
        } else if (data.status === 'Error') {
          throw new Error(data.result);
        } else {
          document.getElementById("job-id").innerHTML = `<i class="fa-solid fa-fingerprint"></i> ${jobId}`;
          document.getElementById("job-status").innerHTML = `${data.status}`;
          setTimeout(() => checkJobStatus(jobId), 500); // Check again after 1 second
        }
      })
      .catch((error) => {
        console.error("Error:", error);
        // Display error message
        const errorMessage = document.getElementById("error-message");
        errorMessage.classList.remove("opacity-60");
        errorMessage.innerHTML = `<div class="px-10 py-3 rounded-lg bg-red-600"><i class="fa-solid fa-triangle-exclamation"></i> ${error.message}</div>`;
        errorMessage.classList.remove("hidden");

        // Hide progress bar and show drop area
        document.getElementById("progress-container").classList.add("hidden");
        document.getElementById("drop-area").classList.remove("hidden");

        // Remove beforeunload event listener
        window.removeEventListener("beforeunload", beforeUnloadHandler);
      });
  }

  function beforeUnloadHandler(event) {
    event.preventDefault();
    event.returnValue =
      "Processing is in progress. Are you sure you want to leave?";
  }

  const dropArea = document.getElementById("drop-area");

  dropArea.addEventListener("dragover", (event) => {
    event.preventDefault();
    dropArea.style.backdropFilter = "blur(8px)";
    dropArea.style.filter = "brightness(130%)";
    document.getElementById("drop-text").innerHTML = '<i class="fa-solid fa-fire"></i> Drop it like it\'s hot!';
  });

  dropArea.addEventListener("dragleave", () => {
    dropArea.style.backdropFilter = "blur(0px)";
    dropArea.style.filter = "brightness(100%)";
    document.getElementById("drop-text").innerHTML = 'Drag and drop your Mii (.miigx) file';
  });

  dropArea.addEventListener("drop", (event) => {
    event.preventDefault();
    dropArea.style.backdropFilter = "blur(0px)";
    dropArea.style.filter = "brightness(100%)";
    document.getElementById("drop-text").innerHTML = 'Drag and drop your Mii (.miigx) file';
    const file = event.dataTransfer.files[0];
    if (file && file.name.endsWith(".miigx")) {
      localStorage.setItem("generate", "0");
      renderMii(file);
    } else {
      alert("Please upload a .miigx file.");
    }
  });

  const fileElem = document.getElementById("fileElem");
  fileElem.addEventListener("change", (event) => {
    const file = (event.target).files[0];
    if (file && file.name.endsWith(".miigx")) {
      renderMii(file);
    } else {
      alert("Please upload a .miigx file.");
    }
  });
</script>

<style>
  .line-container {
    width: 100%;
    display: flex;
    align-items: center;
  }
  .line {
    flex: 1;
    height: 1px;
    background-color: white;
  }
  .text {
    margin: 0 10px;
  }
  .hidden {
    display: none;
  }
  .text-red-500 {
    color: #f56565;
  }
</style>